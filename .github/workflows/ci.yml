name: CI

on: [push]

jobs:
  rubocop:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Rubocop
        run: bundle exec rubocop
  brakeman:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Brakeman
        run: bundle exec brakeman
  eslint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: get yarn cache directory path
        id: yarn-cache
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Setup cache key and directory for node_modules cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: yarn
        run: yarn --frozen-lockfile
      - name: lint
        run: yarn lint
  stylelint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: get yarn cache directory path
        id: yarn-cache
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Setup cache key and directory for node_modules cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: yarn
        run: yarn --frozen-lockfile
      - name: stylelint
        run: npx stylelint "app/javascript/**/*.scss"
  jest:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: get yarn cache directory path
        id: yarn-cache
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Setup cache key and directory for node_modules cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: yarn
        run: yarn --frozen-lockfile
      - name: test
        run: yarn test
  prettier:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: get yarn cache directory path
        id: yarn-cache
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Setup cache key and directory for node_modules cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: yarn
        run: yarn --frozen-lockfile
      - name: prettier
        run: bin/prettier --check
  assets-precompile:
    runs-on: ubuntu-latest

    env:
      RAILS_ENV: production
      HEROKU_APP_NAME: dummy
      REDIS_URL: dummy
      SECRET_KEY_BASE: dummy

    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: install required apt packages
        run: sudo apt-get -y install libpq-dev
      - name: get yarn cache directory path
        id: yarn-cache
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Setup cache key and directory for node_modules cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: yarn install
        run: yarn install --prod
      - name: run bin/rails assets:precompile
        run: bin/rails assets:precompile

  rspec:
    runs-on: ubuntu-latest

    env:
      RAILS_ENV: test

    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: get yarn cache directory path
        id: yarn-cache
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Setup cache key and directory for node_modules cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: yarn
        run: yarn --frozen-lockfile
      - name: run bin/shakapacker
        run: bin/shakapacker
      - name: rspec
        run: bundle exec rspec
      - name: Archive capybara artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: capybara
          path: tmp/capybara/
